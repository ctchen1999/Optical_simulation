% % Reference
% https://zh.wikipedia.org/zh-tw/%E7%BB%B4%E7%BA%B3%E8%BF%87%E7%A8%8B
% https://quantpy.com.au/stochastic-calculus/simulating-geometric-brownian-motion-gbm-in-python/

function St = BMStockPrice(mu, sigma, Year, numberOfSimulation, numberOfSteps,initialPrice)

%% Simulate BM Paths
format long
% rng default
dt = Year/numberOfSteps;
St = exp((mu - power(sigma,2)/2)*dt + sigma * sqrt(dt) * randn([numberOfSimulation numberOfSteps]));
St(:,1) = 1;
St = transpose(St);
St = initialPrice * cumprod(St);

time = linspace(0,Year,numberOfSteps);
tt = zeros([numberOfSimulation numberOfSteps]);
for i=1:size(tt,1)
    tt(i,:) = time;
end
tt = transpose(tt);

%% plot the result

figure
plot(tt,St)
xlabel('Years(t)')
ylabel('Stock Price (S_{t})')
[t,~] = title('Realization of Brownian Motion','St = \mu・St・dt + \sigma・St・dWt');
grid on
set(t, 'FontSize', 14)
set(gcf, 'Position', [1000 0 600 500])
set(gca, 'FontSize', 14)
end